/*
 * SeleccionarCaracteristica.java
 *
 * Created on 18 de junio de 2008, 11:05
 */
package com.softwaremagico.librodeesher;
/*
 * #%L
 * Libro de Esher
 * %%
 * Copyright (C) 2008 - 2012 Softwaremagico
 * %%
 * This software is designed by Jorge Hortelano Otero. Jorge Hortelano Otero
 * <softwaremagico@gmail.com> C/Quart 89, 3. Valencia CP:46008 (Spain).
 *  
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 *  
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *  
 * You should have received a copy of the GNU General Public License along with
 * this program; If not, see <http://www.gnu.org/licenses/gpl-3.0.html>.
 * #L%
 */

import java.awt.Toolkit;
import java.awt.event.ActionListener;
import java.util.List;

/**
 *
 * @author  jorge
 */
public class SeleccionarCaracteristica extends javax.swing.JFrame {

    String modo;

    /** Creates new form SeleccionarCaracteristica */
    public SeleccionarCaracteristica(String tmp_modo) {
        initComponents();
        setLocation((int) Toolkit.getDefaultToolkit().getScreenSize().getWidth() / 2 - (int) (this.getWidth() / 2),
                (int) Toolkit.getDefaultToolkit().getScreenSize().getHeight() / 2 - (int) (this.getHeight() / 2));
        modo = tmp_modo;
        setTitle(tmp_modo);
    }
    
    void RellenaCaracteristicas(){
        CaracteristicasComboBox.removeAllItems();
        for (int i=0; i<Personaje.getInstance().caracteristicas.Size();i++){
            CaracteristicasComboBox.addItem(Personaje.getInstance().caracteristicas.Get(i).DevolverAbreviatura());
        }
    }
    
    void RellenaCaracteristicas(List<Caracteristica> caracteristicas){
        CaracteristicasComboBox.removeAllItems();
        for (int i=0; i<caracteristicas.size();i++){
            CaracteristicasComboBox.addItem(caracteristicas.get(i).DevolverAbreviatura());
        }
    }
    
    void RellenaNombreCaracteristicas(List<String> caracteristicas){
        CaracteristicasComboBox.removeAllItems();
        for (int i=0; i<caracteristicas.size();i++){
            CaracteristicasComboBox.addItem(caracteristicas.get(i));
        }
    }
    
    Caracteristica DevuelveCaracteristicaSeleccionada(){
        return Personaje.getInstance().caracteristicas.DevolverCaracteristicaDeAbreviatura(CaracteristicasComboBox.getSelectedItem().toString());
    }
    
    String DevuelveModo(){
        return modo;
    }
    
     /************************************************
     *
     *                    LISTENERS
     *
     ************************************************/
    /**
     * Añade un listener a un objeto.
     */
    void addAceptarListener(ActionListener al) {
        AceptarButton.addActionListener(al);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CaracteristicasComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        AceptarButton = new javax.swing.JButton();

        setTitle("Seleccionar Caracteristica");

        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 1, 14));
        jLabel1.setText("Característica:");

        AceptarButton.setText("Aceptar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CaracteristicasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AceptarButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CaracteristicasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AceptarButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AceptarButton;
    private javax.swing.JComboBox CaracteristicasComboBox;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
